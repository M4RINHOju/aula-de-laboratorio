LISTA 08 COMANDOS DE REPETIÇÃO "MARÇAL"


Q1 
CONTAR/SOMAR DIVISÍVEIS – Crie uma aplicação que deverá solicitar três valores inteiros A, B e C do 
usuário, o  programa deve  percorrer  todos os  números  de  A  até  B  e  então  deverá  ‘somar’ e ‘contar’ 
todos os valores deste intervalo que são divisíveis por C. Por exemplo, para os valores: 2 (a), 13 (b) e 3 
(c), neste caso,  o programa deverá iniciar no valor 2  e ir até 13 (2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13), 
durante o processamento, deverá verificar quais desses valores é divisível por 3, que no caso são, 3, 6, 
9, 12, e realizar a soma destes valores. Baseado nesse cenário, a resposta deverá apresentar o número 
de valores divisíveis (no caso 4) e a soma destes valores divisíveis (no caso 30). 


int main(int argc, char *argv[]) {
	
	//Declaração de variaveis
	int i, a, b , c, contaDivisivel = 0, somar = 0;
	
	//Entrada
	
	printf ("Digite um numero: \n");
	scanf ("%i", &a);
	printf ("Digite um numero: \n");
	scanf ("%i", &b);
	printf ("Digite um numero: \n");
	scanf ("%i", &c);
	
	if (a <= b) {
			for (i = a; i <= b; i++){
		printf ("\n Numeros do intervalo: %i\n", i);
			if (i % c == 0) {
			contaDivisivel += 1;
			somar += i;
				}
				
			}
				printf ("\nValores divisiveis por %i sao : %i\n ", c, contaDivisivel);
				printf ("\n Soma do intervalo: %i\n", somar);	
				
					
	} else if (a >= b) {
			for (i = b; i <= a; i++){
		printf ("\n Numeros do intervalo: %i\n", i);
			if (i % c == 0) {
			contaDivisivel += 1;
			somar += i;
				}
				
			}
				printf ("\nValores divisiveis por %i sao : %i\n ", c, contaDivisivel);
				printf ("\n Soma do intervalo: %i\n", somar);
	}
	
	
	
	system ("pause");
	return 0;
}


 
 
Q2 
MENU DE OPÇÕES COM SUB-MENU – Crie uma aplicação que consiste em um menu com sub-menus, 
esta aplicação deverá corresponder a um sistema de cadastro conforme o exemplo abaixo, por hora, 
o  sistema  de  menu  deverá  apenas  apresentar  mensagens  dizendo  “Pressionada  a  opção  XX”  após 
seleção de cada opção, note também que ao entrar em um determinado sub-menu, o sistema deverá 
ficar neste até sair, e quando sair dele deve voltar para o menu principal. Dica: Utilize um looping para 
o menu principal, dentro dele, identifique a sub-opção digitada, e então crie outro looping interno para 
controle das opções dos sub-menus.  
 
..:: MENU SISTEMA CLIENTES ::.. 
1. CLIENTES 
 11. CADASTRAR CLIENTE 
 12. ALTERAR CLIENTE 
 13. PESQUISAR CLIENTE 
 14. EXCLUIR CLIENTE 
 19. SAIR 
2. FORNECEDORES 
 21. CADASTRAR FORNECEDOR 
 22. ALTERAR FORNECEDOR 
 23. PESQUISAR FORNECEDOR 
 24. EXCLUIR FORNECEDOR 
 29. SAIR 
3. CIDADES 
 31. CADASTRAR CIDADE 
 32. ALTERAR CIDADE 
 33. PESQUISAR CIDADE 
 34. EXCLUIR CIDADE 
 39. SAIR 
9. SAIR  


int main(int argc, char *argv[]) {
	
	int opcao = 0, opcao1 = 0;
	
	do {
		printf ("\t\t ...::: MENU SISTEMA CLIENTE :::... \n\n");
		printf ("1 . CLIENTES     \n");
		printf ("2 . FORNECEDORES \n");
		printf ("3 . CIDADES      \n");
		printf ("9 . SAIR \n        ");
		scanf ("%i", &opcao);
		printf ("\n Opcao escolhida: \n", opcao);
		
		if ((opcao <= 0)||(opcao >3)) {
			printf ("Opcao INVALIDA \n\n");
			system ("cls");
		}
		
		switch (opcao) 
		{
			case 1:
				do {
					printf ("\t\t ...::: 1 . CLIENTES :::... \n\n");
					printf ("11 . CADASTRAR CLIENTE            \n");
					printf ("12 . ALTERAR CLIENTE              \n");
					printf ("13 . PESQUISAR CLIENTE            \n");
					printf ("14 . EXCLUIR CLIENTE              \n");
					printf ("19 . SAIR \n                        ");
					scanf ("%i", &opcao1);
					printf ("\n Opcao escolhida: \n", opcao1);
					
					if ((opcao1 <= 10)||(opcao1 >14)) {
						printf ("Opcao INVALIDA \n\n");
						system ("cls");
					}
						
				} while (opcao1 !=19);
				
			break;
				
			case 2:
				do {
					printf ("\t\t ...::: 2 . FORNECEDORES :::... \n\n");
					printf ("21 . CADASTRAR FORNECEDOR             \n");
					printf ("22 . ALTERAR FORNECEDOR               \n");
					printf ("23 . PESQUISAR FORNECEDOR             \n");
					printf ("24 . EXCLUIR FORNECEDOR               \n");
					printf ("29 . SAIR \n                            ");
					scanf ("%i", &opcao1);	
					printf ("\n Opcao escolhida: \n", opcao1);
					
					if ((opcao1 <= 20)||(opcao1 >24)) {
						printf ("Opcao INVALIDA \n\n");
						system ("cls");
					}
					
				} while (opcao1 != 29);
			
			break;
			
			case 3:
				do {
					printf ("\t\t ...::: 3 . CIDADES :::... \n\n");
					printf ("31 . CADASTRAR CIDADE            \n");
					printf ("32 . ALTERAR CIDAD               \n");
					printf ("33 . PESQUISAR CIDADE            \n");
					printf ("34 . EXCLUIR CIDADE              \n");
					printf ("39 . SAIR \n                       ");
					scanf ("%i", &opcao1);
					printf ("\n Opcao escolhida: \n", opcao1);
					
					if ((opcao1 <= 30)||(opcao1 >34)) {
						printf ("Opcao INVALIDA \n\n");
						system ("cls");
					}
					
				} while (opcao1 != 39);
				
			break;
				
		}
		
	} while (opcao != 9);
	
	system ("pause");
	return 0;
}




 
Q3 
IDENTIFICAR  MENOR/MAIOR,  PERCORRER  INTERVALO,  CONTAR  SOMAR  DIVISIVEIS  –  Crie  uma 
aplicação que deverá solicitar  4 valores inteiros em qualquer ordem do usuário,  identifique qual é o 
menor  e  maior  valor  e  então  percorras  todos  os  valores  deste  intervalo,  durante  o  processamento, 
verifique  quantos  valores  dentro  deste  intervalo  são  divisíveis  pelos  outros  dois  valores  que  foram 
informados, o programa deverá então contar e somar todos os valores que são divisíveis.  

int main(int argc, char *argv[]) {
	
	//Declatação de variaveis
	int numero1, numero2, numero3, numero4 = 0;
	int maior = 0 , menor = 0, i = 0;
	int soma = 0, contar = 0;
	
	//Entrada
	printf ("Digite um numero: \n");
	scanf ("%i", &numero1);
	printf ("Digite um numero: \n");
	scanf ("%i", &numero2);
	printf ("Digite um numero: \n");
	scanf ("%i", &numero3);
	printf ("Digite um numero: \n");
	scanf ("%i", &numero4);
	
	maior = 1;
	menor = numero1;
	if (numero1 > maior) {
		maior = numero1;
		}else if (numero1 < menor) {
			menor = numero1;
			}
				if (numero2 > maior) {
					maior = numero2;
					} else if (numero2 < menor) {
						menor = numero2;
						} 
						
						if (numero3 > maior) {
							maior = numero3;
							} else if (numero3 < menor) {
								menor = numero3;
								} 
										 if (numero4 > maior) {
										maior = numero4;
											} else if (numero4 < menor) {
											menor = numero4;
													}
	
	printf ("Maior numero:  %i\n", maior);
	printf ("Menor numero: %i\n", menor);
	
	for (i = menor; i <= maior; i++) {
		printf ("%i\n", i);
		
		if (maior % i == 0) {
			contar += 1;
			soma += i;
			
			}
	}
		printf ("\n Soma do intervalo: %i\n", soma);
		printf ("\nQuantidade de divisiveis: %i\n", contar);
	
	system ("pause");
	return 0;
}