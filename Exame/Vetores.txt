VETORES

Q1 
CARREGAR  E  IMPRIMIR  VALORES  –  Crie  uma  aplicação  que  seja  capaz  de  armazenar  10  idades 
fornecidas pelo usuário em uma estrutura de vetor, logo após carregar as idades, as mesmas deverão 
ser exibidas na tela indicando a posição em que se encontram no vetor. 

int main(int argc, char *argv[]) {
	
	int vidades [10];
	int i;
	
	for (i = 0; i < 10; i++) {
		printf ("Digite uma idade: \n");
		scanf ("%i", &vidades[i]);
	}
	printf ("\n Posicao das idades \n");
	for (i = 0; i < 10; i++) {
		printf ("Idades [%i]: %i \n", i, vidades[i]);
	}
	
	system ("pause");
	return 0;
}

 
Q2 
MENSALIDADES  –  Crie  uma  aplicação  console  em  C  responsável  por  armazenar  10  valores  de 
mensalidades, a aplicação deverá conter um menu interativo com as opções abaixo relacionadas: 
 
      ..:: MENSALIDADES ::.. 
1. Zerar (deverá percorrer o vetor e atribuir valor zero a todos os endereços) 
 
2. Carregar (deverá solicitar do usuário 10 mensalidades, cada mensalidade informada deverá ser 
armazenada em uma posição do vetor). 
 
3. Imprimir (deverá percorrer o vetor e exibir todas as mensalidades, exiba também a posição em 
que a mensalidade está armazenada no vetor) 
 
4. Somar (Deverá percorrer o vetor, somar todas as mensalidades e exibir o resultado). 

int main(int argc, char *argv[]) {
	
	int opcao = 0, i;
	float vmensalidade [10], somarMensalidade = 0.0;
	
	
	while (opcao != 9) {
		printf ("\t\t ...::: MENSALIDADES :::...\n");
		printf ("1 . INICIAR                    \n");
		printf ("2 . CARREGAR MENSALIDADES      \n");
		printf ("3 . IMPRESSAO                  \n");
		printf ("4 . SOMAR                      \n");
		printf ("9 . SAIR \n");
		scanf ("%i", &opcao);
		
		if (opcao == 1) {
			for (i = 0; i < 10; i++) {
				vmensalidade [i] = 0;
			}
			
		} else if (opcao == 2) {
			for (i = 0; i < 10; i++) {
				printf ("Digite o valor da mensalidade: \n");
				scanf ("%f", &vmensalidade[i]);
			}
			
			} else if (opcao == 3) {
				for (i = 0; i < 10; i++) {
					printf ("Posicao das mensalidades %i: %.2f \n", i, vmensalidade[i]);
				}
		
		} else if (opcao == 4) {
			somarMensalidade = 0.0;
			for (i = 0; i < 10; i++) {
				somarMensalidade += vmensalidade [i];	
			}
			printf ("Soma das mensalidades: %.2f\n", somarMensalidade);
		}
	}
	
	system ("pause");
	return 0;
}
 
 
Q3 
IDADES – Crie uma aplicação console em C responsável por armazenar 8 idades de alunos, a aplicação 
deverá conter um menu interativo com as opções abaixo relacionadas: 
 
      ..:: IDADES ::.. 
1. Zerar (deverá percorrer o vetor e atribuir valor zero a todos os endereços) 
 
2. Carregar (deverá solicitar do usuário 8 idades que serão armazenadas) 
 
3. Imprimir (deverá percorrer o vetor e exibir todas as idades do vetor) 
 
4. Somar (Deverá percorrer o vetor, somar todas as idades e exibir o resultado) 
 
5. Pares (Deverá percorrer o vetor e exibir todas as idades pares) 
 
6. Contar pares (Deverá percorrer o vetor, contar todas as idades pares e exibir a contagem) 
 
7. Somar pares (Deverá percorrer o vetor, somar todas as idades que são pares e exibir a soma) 
 
8. Menores idade (Deverá percorrer o vetor e exibir todas as idades que menores que 18) 

9. Contar maiores idade (Deverá percorrer o vetor e contar o número de idades maiores ou igual 
a 18 anos e exibir o resultado da contagem). 
10. Somar maiores idade (Deverá percorrer o vetor e somar as idades maiores ou igual a 18 anos e 
exibir o resultado da soma). 

int main(int argc, char *argv[]) {
	
	int opcao = 0, i, somaIdade = 0, pares = 0, somaPar = 0;
	int menorIdade = 0, qtdmaiorIdade = 0, somaMaiorIdade = 0;
	int vidades [8];
	
	while (opcao != 11) {
		printf ("\t\t ....:::: IDADES ::::....\n");
		printf ("1 . INICIAR                  \n");
		printf ("2 . CARREGAR                 \n");
		printf ("3 . IMPRIMIR                 \n");
		printf ("4 . SOMAR                    \n");
		printf ("5 . IDADES PARES             \n");
		printf ("6 . CONTAR IDADE PAR         \n");
		printf ("7 . SOMAR IDADES PARES       \n");
		printf ("8 . MENORES DE IDADE         \n");
		printf ("9 . MAIORES DE IDADE         \n");
		printf ("10 .SOMA DE MAIOR DE IDADE   \n");
		printf ("11 . SAIR \n");
		scanf ("%i", &opcao);
		
		if (opcao == 1) {
			for (i = 0; i < 8; i ++) {
				vidades [i] = 0;
				printf ("Posicao idade [%i]: %i \n", i, vidades[i]);	
			}
			
		} else if (opcao == 2) {
			for (i = 0; i < 8; i ++) {
				printf ("Digite a idade: \n");
				scanf ("%i", &vidades[i]);
			}
			
		} else if (opcao == 3) {
			for (i = 0; i < 8; i ++) {
				printf ("Idades [%i]: %i \n", i, vidades[i]);
			}
			
		} else if (opcao == 4) {
			somaIdade = 0;
			for (i = 0; i < 8; i ++) {
				somaIdade += vidades [i];
			}
			printf ("Soma das idades: %i\n", somaIdade);
			
		} else if (opcao == 5) {
			for (i = 0; i < 8; i ++) {
				if (vidades[i] % 2 == 0) {
					printf ("Idades pares [%i]:. %i\n", i, vidades[i]);
				}	
			}
			
		} else if (opcao == 6) {
			pares = 0;
			for (i = 0; i < 8; i ++) {
				if (vidades[i] % 2 == 0) {
					pares += 1;
				}
			}
			printf ("Idades pares: %i\n", pares);
			
		} else if (opcao == 7) {
			somaPar = 0;
			for (i = 0; i < 8; i ++) {
				if (vidades[i] % 2 == 0) {
					somaPar += vidades [i];
				}
			}
			printf ("Soma das idades pares: %i\n", somaPar);
			
		} else if (opcao == 8) {
			menorIdade = 0;
			for (i = 0; i < 8; i ++) {
				if (vidades [i] < 18) {
					printf ("Menores de idade [%i]: %i\n", i, vidades[i]);
				}
			}
			
		} else if (opcao == 9) {
			qtdmaiorIdade = 0;
			for (i = 0; i < 8; i ++) {
				if (vidades[i] >= 18) {
					qtdmaiorIdade += 1;
				}
			}
			printf ("Quantidade de maiores de idades: %i\n", qtdmaiorIdade);
			
		} else if (opcao == 10) {
			somaMaiorIdade = 0;
			for (i = 0; i < 8; i ++) {
				if (vidades[i] >= 18) {
					somaMaiorIdade += vidades[i];
				}
			}
			printf ("Soma dos maiores de idade: %i\n", somaMaiorIdade);
		}
	}
	system ("pause");
	return 0;
}
 
Q4 
VALORES  ALEATÓRIOS  –  Crie  uma  aplicação  console  em  C  responsável  por  armazenar  60  valores 
inteiros, a aplicação deverá conter um menu de console com as opções abaixo relacionada: 
 
      ..:: SORTEIO ::.. 
1. Zerar (deverá percorrer o vetor e atribuir valor -1 a todos os endereços) 
 
2. Carregar aleatório (deverá carregar o vetor com valores inteiros aleatórios entre 1 e 60, o aluno 
deverá pesquisar gerar valores aleatórios em C) 
 
3. Imprimir  (deverá  percorrer  o  vetor  e  exibir  todos  os  valores  armazenados,  exibir  também  a 
posição em que o valor está armazenado) 
 
4. Somar (Deverá percorrer o vetor, somar todos os valores e exibir o resultado) 
 
5. Relatório valores ímpares (Deverá percorrer o vetor e realizar as operações: contar os ímpares, 
somar os ímpares e exibir o resultado das operações) 
 
6. Maiores  que  (Deverá  solicitar  um  valor  entre  1  e  60  para  o  usuário  informar,  com  o  valor 
informado deve-se percorrer o vetor e exibir todos os valores que contidos maiores que o valor 
informado pelo usuário) 
 
7. Quantos  existem/repetidos  (Deverá  solicitar  do  usuário  um  valor  inteiro  entre  1  e  60,  o 
programa  deverá  então  percorrer  o  vetor  e  contar  quantas  vezes  o  número  informado  pelo 
usuário existe no vetor e exibir o número de ocorrências encontradas) 
 
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

/* run this program using the console pauser or add your own getch, system("pause") or input loop */

int main(int argc, char *argv[]) {
	
	int opcao = 0, valor, repetido = 0;
	int vsorteio [60];
	int i, somaValores = 0, contarImpar = 0, somarImpar = 0;
	
	srand (time(NULL));
	
	while (opcao != 9) {
		printf ("\t\t....:::: SORTEIO ::::.....\n");
		printf ("1 . INICIAR                   \n");
		printf ("2 . CARREGAR                  \n");
		printf ("3 . IMPRIMIR                  \n");
		printf ("4 . SOMAR                     \n");
		printf ("5 . RELATORIO VALORES IMPARES \n");
		printf ("6 . VALORES INVALIDOS         \n");
		printf ("7 . VALORES REPETIDOS         \n");
		printf ("9 . SAIR \n");
		scanf ("%i", &opcao);
		
		if (opcao == 1) {
			for (i = 0; i < 60; i++) {
				vsorteio [i] = -1;
				printf ("Posicao [%i]: %i\n", i, vsorteio[i]);
			}
			
		} else if (opcao == 2) {
			for (i = 0; i < 60; i++) {
				vsorteio[i] = 1 + rand () % 60;
			}
			
		} else if (opcao == 3) {
			for (i = 0; i < 60; i++) {
				printf ("Numeros sorteados [%i]: %i\n", i, vsorteio[i]);
			}
			
		} else if (opcao == 4) {
			somaValores = 0;
			for (i = 0; i < 60; i++) {
				somaValores += vsorteio[i];
			}
			printf ("Soma dos valores: %i\n", somaValores);
			
		} else if (opcao == 5) {
			contarImpar = 0;
			somarImpar = 0;
			for (i = 0; i < 60; i++) {
				if (vsorteio[i] % 2 == 1) {
					contarImpar += 1;
					somarImpar += vsorteio[i];
				}
			}
			printf ("Total de valores IMPARES: %i\n", contarImpar);
			printf ("Soma dos valores IMPARES: %i\n", somarImpar);
			
		} else if (opcao == 6) {
			printf ("Digite um valor entre 1 e 60 \n");
			scanf ("%i", &valor);
				for (i = 0; i < 60; i++) {
					if (vsorteio[i] > valor) {
						printf ("Valores maiores que o digitado[%i]: %i\n", i, vsorteio[i]);
					}
				}
				
		} else if (opcao == 7) {
			repetido = 0;
			printf ("Digite um valor entre 1 e 60 \n");
			scanf ("%i", &valor);
			for (i = 0; i < 60; i++) {
				if (vsorteio[i] == valor) {
					repetido += 1;
					printf ("Quantidade de REPETIDOS: %i\n", repetido);
					printf ("Valores REPETIDOS digitado[%i]: %i\n", i, vsorteio[i]);
				}
			}
		}
	}
	
	system ("pause");
	return 0;
}



Q5 
VALORES  ALEATÓRIOS  2  –  Crie  uma  aplicação  console  em  C  responsável  por  armazenar  60  valores 
inteiros, a aplicação deverá conter um menu de console com as opções abaixo relacionada: 
 
  ..:: SORTEIO 2 ::.. 
1. Zerar (deverá percorrer o vetor e atribuir valor -1 a todos os endereços) 
 
2. Carregar aleatório (deverá carregar o vetor com valores inteiros aleatórios entre 1 e 60) 
 
3. Imprimir (deverá percorrer o vetor e exibir todos os valores armazenados) 
 
4. Entre  valores  (deverá  solicitar  dois  valores  (ambos  entre  1  e  60)  do  usuário,  com  base  nos 
valores fornecidos, deverá percorrer o vetor e exibir todos os valores armazenados que estão 
entre  os  valores fornecidos, por exemplo,  se o usuário  informar  os  valores  13  e 20, todos os 
valores armazenados entre 13 e 20 presentes no vetor deverão ser exibidos) 
 
5. Exibir repetidos (deverá percorrer o vetor e então verificar quantas vezes cada valor presente 
no  vetor  existe,  somente  valores  que  contiver  alguma  repetição  deverão  ser  exibidos,  por 
exemplo, se o valores armazenados são 5, 12, 60, 3, 12, 3, 1, a resposta deverá ser 12 = 2, 3 = 2 
pois  o  números  12  e  3  aparecem  2  vezes.  Dicas:  a)  crie  dois  loopings,  o  segundo  dentro  do 
primeiro, o primeiro será responsável por percorrer cada posição do vetor e o segundo contará 
a quantidade de repetições que existe  para cada posição acessada do primeiro; b) Se 
considerarmos o exemplo apresentado, serão apresentadas 4 mensagens, 12 = 2, 3 = 2, 12 = 2 
e 3 = 2, isso ocorre por que na primeira ocorrência do número 12 haverá uma contagem e ele 
aparece 2x então será exibida a primeira mensagem, quando estiver na segunda ocorrência do 
número 12 também será computado que o mesmo aparece 2x, então será novamente exibida 
a mensagem, não se preocupe com essa situação de aparecer mensagens repetidas).


#include <stdio.h>
#include <stdlib.h>
#include <time.h>

/* run this program using the console pauser or add your own getch, system("pause") or input loop */

int main(int argc, char *argv[]) {
	
	int opcao = 0, numero1, numero2;
	int i, j, repetido = 0;
	int vsorteio[10];
	
	srand (time (NULL));
	
	while (opcao != 9) {
		printf ("\t\t ...::: SORTEIO 2 :::...\n");
		printf ("1 . INICIAR/ZERAR           \n");
		printf ("2 . CARREGAR ALEATORIO      \n");
		printf ("3 . IMPRIMIR                \n");
		printf ("4 . SOLICITAR VALORES       \n");
		printf ("5 . EXIBIR REPITIDOS        \n");
		printf ("9 . SAIR \n");
		printf ("Digite uma opcao: \n");
		scanf ("%i", &opcao);
		
		if (opcao == 1) {
			for (i = 0; i < 10; i++) {
				vsorteio [i] = -1;
				printf ("Posicao [%i]: %i \n", i, vsorteio[i]);
			}
		} else if (opcao == 2) {
			for (i = 0; i < 10; i++) {
				vsorteio[i] = 1 + rand () % 60;
			}
			
		} else if (opcao == 3) {
			for (i = 0; i < 10; i++) {
				printf ("Numeros sorteados [%i]: %i\n", i, vsorteio[i]);
			}
			
		} else if (opcao == 4) {
				printf ("Digite dois numeros entte 1 e 60 \n");
				scanf ("%i%i", &numero1, &numero2);
			for (i = 0; i < 10; i++) {
				if ((vsorteio[i] > numero1)&&(vsorteio[i] < numero2)) {
					printf ("Valores entre os digitados [%i]: %i \n", i, vsorteio[i]);
					
				} else if ((vsorteio[i] < numero1)&&(vsorteio[i] > numero2)) {
					printf ("Valores INVALIDOS ! \n");
				}
			}
			
		} else if (opcao == 5) {
			printf ("Numeros repetidos do vetor. \n");

			for (i = 0; i < 10; i++) {
				repetido = 0;
				for (j = i + 1; j < 10; j++) {
					if (vsorteio[i] == vsorteio[j]) {
						repetido += 1;
					}
				}
				if (repetido == 1) {
					printf ("Posicao [%i] = %i\n", i, vsorteio[i]);
				} 
			}
		}
	}
	
	system ("pause");
	return 0;
}
